// Automatically generated by flapigen
package army.warfare.skiter;


public final class Host {

    public Host(long handle, GfxLayer backend, boolean transparent) throws Exception {
        int a1 = backend.getValue();
        mNativeObj = init(handle, a1, transparent);
        JNIReachabilityFence.reachabilityFence1(backend);
    }
    private static native long init(long handle, int backend, boolean transparent) throws Exception;

    public final void dispatchMessage(Message message) {
        long a0 = message.mNativeObj;
        message.mNativeObj = 0;

        do_dispatchMessage(mNativeObj, a0);

        JNIReachabilityFence.reachabilityFence1(message);
    }
    private static native void do_dispatchMessage(long self, long message);

    public final void onDataLoad(DataLoadCallback data_load_callback) {
        do_onDataLoad(mNativeObj, data_load_callback);
    }
    private static native void do_onDataLoad(long self, DataLoadCallback data_load_callback);

    public final void registerBehavior(String name, DrawCallback draw_callback) {
        do_registerBehavior(mNativeObj, name, draw_callback);
    }
    private static native void do_registerBehavior(long self, String name, DrawCallback draw_callback);

    public final void onNativeFunctionInvocation(NativeFunctionInvocationCallback native_function_invocation_callback) {
        do_onNativeFunctionInvocation(mNativeObj, native_function_invocation_callback);
    }
    private static native void do_onNativeFunctionInvocation(long self, NativeFunctionInvocationCallback native_function_invocation_callback);

    public final void dataReady(String uri, long request_id, byte [] data) {
        do_dataReady(mNativeObj, uri, request_id, data);
    }
    private static native void do_dataReady(long self, String uri, long request_id, byte [] data);

    public final void loadHtml(String html, String uri) {
        do_loadHtml(mNativeObj, html, uri);
    }
    private static native void do_loadHtml(long self, String html, String uri);

    public final void loadFile(String path) {
        do_loadFile(mNativeObj, path);
    }
    private static native void do_loadFile(long self, String path);

    public final void callFunction(String name, byte [] data) throws Exception {
        do_callFunction(mNativeObj, name, data);
    }
    private static native void do_callFunction(long self, String name, byte [] data) throws Exception;

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ Host(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}