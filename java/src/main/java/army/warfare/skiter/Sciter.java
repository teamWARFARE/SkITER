// Automatically generated by flapigen
package army.warfare.skiter;


public final class Sciter {

    public Sciter(long width, long height, long hwnd, SciterCallbacks callbacks) throws Exception {
        mNativeObj = init(width, height, hwnd, callbacks);
    }
    private static native long init(long width, long height, long hwnd, SciterCallbacks callbacks) throws Exception;

    public final void resize(long width, long height) {
        do_resize(mNativeObj, width, height);
    }
    private static native void do_resize(long self, long width, long height);

    public final void heartbeat() {
        do_heartbeat(mNativeObj);
    }
    private static native void do_heartbeat(long self);

    public final void render() throws Exception {
        do_render(mNativeObj);
    }
    private static native void do_render(long self) throws Exception;

    public final void redraw() {
        do_redraw(mNativeObj);
    }
    private static native void do_redraw(long self);

    public final void mouse_moved(int x, int y) {
        do_mouse_moved(mNativeObj, x, y);
    }
    private static native void do_mouse_moved(long self, int x, int y);

    public final void mouse_down(int x, int y) {
        do_mouse_down(mNativeObj, x, y);
    }
    private static native void do_mouse_down(long self, int x, int y);

    public final void mouse_up(int x, int y) {
        do_mouse_up(mNativeObj, x, y);
    }
    private static native void do_mouse_up(long self, int x, int y);

    public final void click(int x, int y) {
        do_click(mNativeObj, x, y);
    }
    private static native void do_click(long self, int x, int y);

    public final void load_html_string(String html) {
        do_load_html_string(mNativeObj, html);
    }
    private static native void do_load_html_string(long self, String html);

    public final void load_html_file(String path) {
        do_load_html_file(mNativeObj, path);
    }
    private static native void do_load_html_file(long self, String path);

    public final void call_event(String name, String data) throws Exception {
        do_call_event(mNativeObj, name, data);
    }
    private static native void do_call_event(long self, String name, String data) throws Exception;

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ Sciter(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
    static { System.loadLibrary("sciter_jni"); }
}